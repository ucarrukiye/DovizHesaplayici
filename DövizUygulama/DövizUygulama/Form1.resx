<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAoHCBYVFRgWFhYZGBgaHBwaHRwcHB4hGB4aHBoaGhwcHBwe
        IS4lHB4rIRoaJzgmKy8xNTU1GiQ7QDs0Py40NTH/2wBDAQwMDBAPEB8SEh80LCUsNDQ1NjQ0NDQ0NDQ0
        NDQ0NDQ0PTY0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDT/wAARCACxARwDASIAAhEBAxEB/8QA
        GwAAAgMBAQEAAAAAAAAAAAAAAwQBAgUABgf/xAA7EAABAwEGAwcDAwMDBAMAAAABAAIRIQMEEjFB8FFh
        cQUigZGhsdEyweETQnIGUvEUYoIVkqLCIzOy/8QAGQEAAwEBAQAAAAAAAAAAAAAAAQIDAAQF/8QAJxEA
        AgICAgEEAgIDAAAAAAAAAAECEQMhEjFBBBMyUSJhcbGBkdH/2gAMAwEAAhEDEQA/APrpCkNVoUgJrMVh
        ThVoVLW1a0S4gDiSt2YqWqCFiX/+pWNowYjx0/Kw712zavzdA4Cn3XVj9Jklt6/kjLNGJ662vbGfU8Dx
        SFt2/ZNyly8oJNST6/KM2z3X5XSvRxXydie9KXxRsW39RkfSzzP4Sz/6htDkGhJfpzv8qhusVk/lVjhx
        LwLJ5PDHR25a8R5Kze2rTWEoLtvZQrZkAnhrp7pvbxvSSBeReR+0/qHAJfhA4k+1KlDZ/VlkcwesH4le
        Tt7BznF572ggmAOArRVtbPuxEeG9gKy9Hja2v9G9ya7Pe2Padm9uJrpHEVE8OR5IheDkQd9F4C52j7J4
        eCA00eKw5uozzAkg5g8iVvdoPwsxNPMEe+eShL0yjLimFZnVtG67e4Szm679kGxtnBgmpwjPjAVnWw1p
        vqlUWhucWQ50Dfwk3unx3wTF4fTfygG2ERB8vyqRBXkNd+O/ZZXaT8Vph0oPudOa1rE92QZ6cefBYl/M
        WhI5ceA5oPbFj2xw73Cx7U47YRxH/jnpyKm2teZPn8oFkNfn5XSoptJAUatl+13y5rB18TQablR/onMt
        GlmUCRrwOmR56pdriXzzpn0Gq2rNhFMyak7Ko9InJ0kgbWuH7B/3V/8AyiNtiNSCP2nhxHEdPRHB4ods
        zhnQtPAxNfaOanyvslQF17eDMDDP20PyiWfbDQ7CcTTMCcjUAEEcSQodaNgQKGo5aoFpH9s8xx6Sjxi+
        0blRr2V8kUIMEgwRQzlRQ6+EHQ+awxdm4muB72YBJE1JjpJkwFVgtWuq7E0mTIyEkmIrwGeiHtRDyZ6a
        6W+IkEYYiKzMzvxTWHmF5Kw7RJIBY5pJilQM8zlkJpOacse0j+188j5a9D5KcsLvQynXZ6LCUN9jJmCk
        LjfnPeGwIgkmq1MBUZJxdMompK0e0hcTGaFebw2zbicYC8j2r22+0lre63xkrysOCeV66+ztlJRNLtX+
        pmMltnD3cZ7oPXVeSvvaD7Uy901y0HQJd+dPuuA3Vezh9NDEtLf2cE8spOiG6A5jpvitK63QkSR7Klx7
        Nda1FA3Uz5LZF0ewNaGzWrgSIFOea2XMl+KeymHHe5IVbdCNhEs7ESRFeFJWsLq7Q+fyFUXWvekHj+fl
        cbz2dagkZ36MOyzE6aKP05ccob75nTgtV11PdOoPmIjfRAtbDDDcxmRXvEma6xyCCy2ahEsnSB4V9Mll
        X+0xANwAidTAjqvQPscQ71epwt8pnzWLew6S0gOI+mkj1zCvimmxJIx7S65txBob4x1IauN1AHec05Zf
        WAcu7C3rK7vf9Z7sD6TFeDgM1j3ixcDiPEiSM4XTDLbpvYHFCFq0NBByGRgLUe3/AOJjDmWsactYHBSy
        6NeAQGDiKz1zhMCyLi3KhBoTojKadfohOPhDRyWHfO1GhzoOItENAynWT5DzTva1q7DhbSc85jgvNPu+
        eY5VTYMaluQvG1sN2f2g+SC/G4ycJzJ4NBFeUVWpY3xj8jB4GPTivN2lnSD/AO09Udj3RJccQoTociHd
        TME6xOq6JYVegcpR/aPQttS10tjmKVHApO8kEk8TOnwlrLtGDhf4GsJsMmunioShxe12VjKMlaEnMG4+
        FR8xQe3wjWjuvqqhh4e6pBV0CT8sQD8JnUEGKaGeC9KXN+oEFrhLTSrTlvkVhXi7kjPzmPPTxpzCWu3a
        b7GWFuJknumQQdcJ/aeIqOWqlllTV9Ctc1rs9FinnxyhUvFsGtLiQA2a05/nySH/AFphaIZaV0p1zncp
        a1tH2jgX91oqGNJrwLiOHDiE6i3Tog1XZaydaRixDP6S2QK5SK0om7lfe8GPaGk8atd/ExQ8ijteCIEh
        3EfRI4x7nzWffbEuBDxE0pOeh5GdQnvlpoRutm5ebNro0EfUIiAOKVs7MsOjm6E1MHTl190Lsi/hzALR
        7WuBwuxOwzFJEnVarmayC0igFZ5yM+ii7i+LH72CFo0zQU14eKXdc2FzXACW1HCs8I4lNxTLPdVUthZP
        6MeR7X7Yfd7cMsHBoY1ocIDgSawcXIjzTdn/AF3aAQ+yYXalpIHlBjzWD2p2beG2jrS0snQ5xOJveaAc
        qtmABx4LLw8x5j5XbHDinFWkx9ro+s3/ALWdauLnGmjaQEm60J2ENrevqjNZuq5FCMFSQOU59shjN0RW
        s3REa3dUVrDuUspFYYjV7FdZta5z3RFMJiORAzJWqy+WbhLWF1YADRM1MV5CV5tlkSQACSaACZXs+zrq
        WWbWkBtKxnJXl+pqL5N7Z2QTSoXYGEYhggnQSegjVGsbITqOVB6D7pgtj6fExP8Akqn6dYGX7jqTwlcf
        KxghLQKwIzQLdjTTCJ8JPSc1cNkOnIkjw+n7KjGYmicxrrIpPmstbMLBgyETwLQD6QvM9oPxPccTSJpW
        nCkr0naDXuYWsAxag6j/AG8J+V5m1ZGhB4Gfvl4rq9PNK5PwBqytytxZuOIUcOXnzWgG2doKYHDwny0W
        Y2zPP19VH6YFag8pVlynJSqgPQ3adntH0mPJCYwsDpgmvDLTzXf6x7f948cSK28teIgjSCD7qnOV8WTl
        FNaMK8PJDsVCCCCIyPHlkPELNeawfsvTWt2aMhlTXI5jmFnXuwEdOM+8LrxZUuwNUYT2ax7Z6jqlxR1O
        HJaFszvECcyNYzQLa7xQk86ldfuWrQjS6Zm3ytBQnp58k9ZdoBmFky3iI3pJ68kJrMIpIJOdeuXRK2lk
        TyyOvOBEV1WTc1+QjiltG+wA1ER4b1RNNNeCw/6evRAfZuJkOL2zMlhEO8oBjg4nQreAp/mFOKrQs9i5
        dx+yzO1bMUIGhnLJoET4GP8AiFrWjd1WTenYjQmmRrnqtOPJfsXHp6DWdm3AwjVodyocJy/irF4xACtA
        NOpHOpQezLxLf0iYcCXMJJAJP1MJOUwCDxEayGi0gkEGAe80gyONCM8kcc+S/aJ5I1ILY23AkzTCCDPS
        Jnpn1UXm1loBAAyqRJ1qMhSUJz6EAGMtcuqXtrYMaXOJ4AVPg2cyqKO7JX4ELyG4yDI6AE8NSOCpYXt9
        g7FZPkagjuu5Oacuo8CoBIJLxOKpiQRwgkUMcqz5c6ya76XTyIcD7FvquhJSVS6D8T2/Zt/beGY2gA/S
        4atcMx01HGUezZJG8l5D+lrVzLctJo9pmDIltQaawXL292ZUnw36Lzc0fbk0uvBVfkEwpe07OsnGXWVm
        TxLQT5wmyxcufk/A5jMbunymGM3T5U2bN7CaZZ72FaUjpx40kUYzdPlGYzdEVlkTv8J67XXFqB1NZ6RM
        c8lzTyJdlkhjsm7Na4OxmQJIApWBhms5gZdFt3i0LmOLTSDXjGYEeNVl3G5yYBJb+5wmP4t48zs6d8tM
        DQ1oEmgGVNd815mV8p/bGL2FriY0gRiFBw/CLggKbCyDQAMgIHRTaZennRQb3oxmW91c4tEQ0OaaRJBF
        T4GU6xlXDnPn+QUzCE4d4c5H3H3RcmzAn2fDMbhI324MtRJo7jz58YWqQgPbBnTX539llIx5e17Me0d7
        DAIEzlOvRJW93c0w4R5QfVevvN2D2lrsjHoZSb+z2Ey6XE8T9guvF6lxVMzVnk7Zm6fKvdx3TPHlp4rb
        tuyWzQkDzj46q77k3DhiOmfsr+9FuxJRtUYwqADn4Slbaw4fZaV/upDThBPJAvLe6CJBMAZzUa00EnwV
        4zTpomk62YrGA94jOTpqZ4rOvTpzivTLzovQWlj3YG/RZN8u5Bmvr6UXT7iFUVdmVasn208deEIdnYY3
        Bv8Acc6ZanyEpt7Y9fXwTHZFjLnOOggePhuVVTaTFlpWZfaHZ4aQWd0t+kj6gRrimUDsztp2M2do1uIZ
        OADZ0qJgHoAvSXxkAk5ATui8f2lcz/8AYzMHFrnqMk8nzhp0/slit3Zs3m8Egig8vlKmAOHl8ofZ98bb
        MxNMOH1NcYcPSCOfoptmcT619lwwzTjN3v8Ao6OMapCZs8Tojnp14pp1/tGgNcG2jRQYhUDgHAhwHKYT
        Vwu2bvDdNyiWl3nZHlRehiiq/Ls5cuRcqM5naLnSGWTGlrcX1ONARMAkzEzXQEobAXODnul2kxlUENAo
        NRGf3LbWTmkObRwMilOYIioIoRqCjWFo1xlsBxzaXQ+ueFx+ttP5cQfqNWuP/RPxa0gLrVgc3uzwECo4
        EA5ys99oZOQrpA9qeS073cy4fS+RoWumumW68UkbvhPez/tBl/jH0jr6qkGqsm6Hf6dsotQ7g1x8+6Pv
        5L392ENHn51Xl+w7oRGL6nkTyA0HIBeplef6uXKZTH9hSVVcCplcpUBY2e9lOWdjvZXWDN7Cas2b2Ek5
        s9BIhjN7KMwwHAZmk8G6jPWnqujz3yRmMgLnkw0PXK2MYSQ0UAgVnxJ2U49jJkgGcya0HtVZTWpmztDB
        adSJJ6yfdcs4btBo1A8ETNOKVt72AO7BqgXjETAmNAMo0QMHv8pIwXbBRoWd8ac6HgjWuU8DPz6SsctT
        V0vFcLiTNAllFLo1GkQoLVDMgrpACwbBjTT43p0WZ2nfS12BoEwDJ56R091sWjZHseB4pO2ubLQy4d4U
        MH06a+KZNXswl2W/FZ1mWmJOtKIj7OMhTh8fCfDGtAAEAZBBeQnjKmZmbasBWXaMxHFpUN+5z1inIc1p
        XhuP6fp1r9caCmXE65cwK1aCKb9F1YnQrRi2kjf5SNvnMfHutm2st7CQt7PewurG5LyI4oyLSzaTz3zQ
        XXUCoJB4/wCCm7axB3+Es+zcMnef+F2Rba2iE/0xW8/q4S2Q4HpPuD7rODc2EQefDzWlaWrm5tnm2vmI
        VrFjLQkmMWXB3tXxVk1VEYzcfB5f/TmytJAgOIB4REUr4rWIbE8qbnotK99kYwMLstDT1A+yzrK42oGF
        7MtZBB1MECnjGSZcHtdjqdur0a12sAGClc/EiePBUtQBmQJEwc+eqasbLC2hcepr4SIQL5YlxgRGc/YU
        Sxl+XZzyQmLEPA5+3mkrz2YDpvzWzcLtAkzOUTQV4eCN+kIyBg09tdc1T3mnSYij5PMDswzhDiBqJpHm
        tG49ltZBgLTIABJLRGpNI50oi2TmuALSCNCDT0QlmlWg032xns6yqTwpveq0HBUudnDRxNfP8K7wuGUu
        Ui8VSIa5TjQ1aUGgmnZN3sppjZ6+/rmg2e8kZgnp4Ljmz00EYzU5ooarNg558fn5V8Kg5BKwrtauAVwl
        bMXFqcOHcIZCvC6N+SToB1pZAgOb0I4HihQm7r9Xgg24Eu6qbdMyCWd8yBGevp718U+sdzd9c/YLSu7i
        WgnOErA0GQbShxefTj4e0qt8tcLSRn4fdLXS2c4GIJ1J+P8AAWoA3avDRJ304pR9kX/UIb/bqf5cuXnw
        RrGyDTBqQKE8KUHCDw4hFeEUYz7WzSVuwio/ytO0alrUK2OVAZkvrv8AKRvDd7K07zZ6jxHH876Z1s3U
        ZeC78chZGZbWe6/KTfZ6T7/KftiNx8JJ+8vhd0GznmtAP9O6Qcx4rn2Id9THdY+CmWOkT8fCPYHMfCZz
        aOVqzLbLfpc4DgQfY08ldts/OGuHIkE+HHxWoQOCy+0brhBe12DCJJkRA/u5IqSbpmaaQcXtmROE8HSP
        WYQLW5GcTXEdCR6TBWXdu1bO1FSNaxQxnmEUWJFWPLNZaRhPUZHqmUfpmeu1RpWOMNgkE9K+MGCot71H
        ERoRQ04rGdfbWzPfYHN0cKT4xBPKiOztJjqE4eTwPfL1TcHd0K00A7QvwezCRUOa4/2uwmSHagHxyQC9
        4acB7z3utHBhIa1ob9OWKTAyGaYt7kx1WmJHIt9flAZ2U9xloxAZxnXWD45SrJQruv5FUn0bdh2u+zbD
        yHFli17po8ve7usEUFKZFaH/AFNv6gsnAh5oIhzcQaHOEgyCJ/cAvLFzmvBcAXMMjE0FwrNMQkBafYYL
        7V9q6SWjDXDm48hNIIqT9S5p4Uk5FFO9Gtfu1rKxgWj4JqAASY4wMgnbpeGWjQ9jgWnIhed/p6LV9reH
        VLnFrZ0YOHCkDw5qvYDyW2hYSGm1eRwikRyhTeLtXtDJnvGbzTdmElYRn8JyzIXlyPVQdqI0kITSryos
        IZpnTyVwOaGFdTaMWAUEb8VCid+JWAM3emmfTkg27akxAnn1qqtdBB4VTL3sdmRXz4KclTML2TaExOW/
        ZN2Le6INDWnNLPbhBAdzrEfk0C6wvbWgNM08oNR6IUzMaNmAD0NdfNZVxBJc0GJafPjMyFoXq0mzJbBB
        HofusVuYrFRUAE+AWirMi1leHMcA4uhsgA/edPlbYeCARqq2GEgEGTxIGLxooPddGjqj+Wo8c/Aot34A
        ytolLVMvKUeVSHYBS2WbeBFfPPzWhbHdFn3h26LuxoVmdeRuqQe07lO2gE8vBK2lqBWByyqd7qu6DdaO
        ae+hUXkA4YOYBOgcdM9mUsO03y9oaAWseWziPeZFDkKitEO823eLg0ZyRNJ4xxSRvLg4FpAMkyA2Zd9V
        c6qixTl2TaXdGi7tBzxaFr+60WTmlpiMYhzS4NcZnSJyyQ7+577g/Fix4YMh0mH51rlCTs7taukBryOl
        K68Ctrsu5OFk9j2wHE07uREHLJacFBXasVSV9Cfalkz9Kxe0CAWARkWOblTTLzSj7s67uwOJDCe4+pZx
        wv8A7TzTd07De0sY62x2THYmtwgOpOEOdNQJ4eSftuxGPJL32jwSThc/uCswAIoPskUuLuw6apmc7EB3
        mwD4sPz4qWdi424290n9pmCNK5j1Ww20sWgMxMgANAkEwKARmkxZ2ll9BDmaMdlH+05t9uSqssn8dP8A
        sjxSPO293fZkziY6pjj6w5aHZl+tbKzc9zQ5tTqHUFTIoeAEaGq2mW1nbDC9sE/sdE+HHqFTtXs8vsH2
        bAAcIDRp3YIE84z5oyzcqjJBjHymDu3atjbsDntLWkTFo2kDWagBPXKxs2t/+MDC44u6ZBNBIM8gvNvd
        a2rG3dti+yoGvc4Q0AAAhv8AcDH21lX7Mu4tLRzmFzLOzAY0tMYjq4x9XHxCR41T3Qb30Ed2ReGNfZ2T
        2CyeSZcDjYHZgRQ7yQ77ebS7YbKxsX2jWtHeDXHvSZqBC2D+qwZteAP3CHebaeiCO2m6seDwgH1lFcn+
        zWl2etY7dU0xx3KzrF4kSYHICnhKbY9eXKJ6yY8wojTXfh90CzDsOKJA1V7I7oudhGQVIKE1ysCkoxdS
        D7BUBXB3sPYIMxYlDJUyqkoMxVVJ30/EKSUMnPrv7IUY5to4ChI848tUz/1ENbRoDp0FImvikXFCcUVC
        6AzZsL9ieWgUiQa8sx1lFtmyM+nI6JPsgDC40mY55BMXm8NYJcQBvzSuNSpCgzbSJjr1FCPNKvep/WaT
        LSCHcP7gPuB/4oNsQrQjsFgLZ26rPtjuqYtTGwlXmdhdkFQGKvHl4pS0s5zn1yTNoJ1pwpuUu6ybrXyX
        XH7OWcqFXssx9UeJJ9FLLRo+lp/4tI94RzZDgKkVpkNM9yrtYAn5Ig9lReXz3bM/8nR7AqW2lodWtHIE
        nzJj0V96LkuvoAF1i4mr3+Bj2AXG6NJEgu/kSfdFKkmo/CN/RqRRtg0ZNXPbhAAoJGXMq64obMBtbviE
        EA9QZ8/whC1tGECMbeBPfA4h2o68UauU1HSo08fvKuzDp48fGao+KYKKttGWgLQTUEOBkOANOviFNyuT
        bJoYwHCMuPGp1Qre7tdXIjIihHiENl8exwa4YwdRAcOEjI/jVataf+DKVdj1pWniftvogmwHBXaeOeq4
        nmPRBWgvY7ZWm9hNWNpvYWS11OW+dE1Yv3sqM4I9NM9h2beA5mEQCKROc6+ZSt4bhc4DKadDX7pPsu8N
        b3nZg06AGg5kkeSk25cSXGSd8V53tuM39Dobxq4mJ0yQ7pYuflEDMrVZdGgREzmd5JJzUXRmzNxKcX29
        k7YXVoLteRWfbAtcZ/zFKLKSk6NZbEqkoZequcnUQly5UeYMGQcornmNOICeuN3gFzh0nzlIW1oXvkZk
        iPshF22kAHayDBEHxQ7RrgASIBqOa2ru9xaQ4VBLeoGRQb7Y4mwIBBkcOEIxybpgszbpfMBOoIy5jLRK
        Xq8OecTs+WQHkjXi6vYJIEcQkXu3srphCDfJCjFztoJaaTEHg4ZaJxz5ErHwk5fj3qtF7jJGU1584rT3
        rotOK5WgWUtX/wCNiiStTvT2R7Q72Uq872VaERJA3O3sILjvYVnjeyhEdfP8roikcc3s5zsuvP4VsSC5
        uWefE8DzU4OvmflNSJ2EldKHhHPzPyuw9fM/K1GCOK4mo39kFza6+Z+VbCJGeup+VqNYWV0oRZ18z8qQ
        3r5n5WoNlntyOo3HRQCDQ0Pr4FQWDn5n5VDZ8zIyqflCgFmN5mZIzzgx0Co6zgng7CNdJJJPHmrWTqQc
        8yOp04hRaEuBA1pOn5RMc+hAk1PGnma15IuAcB5JQmhAkAwDM0JMUJPtyTNlad0dFqMiGPjf4Tl2dJ+N
        fCI9R0Wa129lN3a1g1mOXHzS5I6O+EjTIqIrs6RKPZv3sLNFtiJOmntx5Jllof8ANfWZHguWUGiyZs3G
        /FnMHMazxFE8e2ODfX8Lz7H8vVEFp134yuaeGLdtB0adlfnNcXZzmPhXt7YvbIaYaTJ/lB9iFll/A+49
        4V7tbEOAD8M4ZOIcBpiqleNfJdh0FLt7CJdwHOaDkTsK3adqyQQRiIqZER55odyHeDiaA6VPpK13CzWM
        3+94iGMJpQxkdIjVFul1wd531R4D8pW0gOa9rSWt0wkOmtaxOnkrN7QL3YWsyzJOXh+UlOqj15FssC5t
        sc8LhP8AtBI8s2nzTDwDx114rJvHaJDjB5GBGU/3Tz0S1r2gTk3/ALpd5AmB4J1hk60CzVcWkYZLxEcf
        HFET46LOtLjGRHjX7Qk7S9vdm53hQehQHPJ4+vyuiGGUfIGxtto1rs8WmLh04olraAiRXX504LNJ3sqp
        cRkSN9Vb2kSc6HbR29hLP3uFLHyN/Kq472U8VRnK1YJ29whO3uEV29yhkb2VVHLPso7Tr9jyXHe4XHTr
        9jzUxvZRJld7ouG9woJ3sqzRvZRMVJqpmvn9uS6KqS2vgfssYne6LhvcLlyBid7ooXLiVjALacTY6Hof
        tT2RxvcIL3DEJpA9TIA9/RS+1AEiDwE5omLWv0np66eq67s7oQ8GMd7I1gT4Vz9lazDjNRQ6xOQP3WMC
        ad0+EVjt0+EBp3VEbvNPJHTCQzZO3T4TLH7p8JJjt1R2P6+qlKJ0xeh1r90+ExdCC5odkTBy1We1+6q2
        Pr6qEoWqGs9Bb9nd7uuAbzqQfuh3O64XlziCBEdQBXJGsL2HNBnSvXUIAt6v/lz/ALQuJcqcWGxi2vDH
        93ECTwz45rrN4Y2AUg54bkI6BCdehx906xapdAs0X3lCZaAZaknxKSxk8fVDtL1hMQSR1TrF4QHItfxX
        FSD0z8kmXbp8KLS2c7OfWFQu3VdEItKmJKRcu3T4VS7dPhVxbqondVRIm5kudunwqOO6fC4ndVVx3VMk
        SlIux8bCt+oDsfCATuq4HdVuKJ82tBHHdPhQSoDt1XE7qsK3ZDtPxwKhzlR7qjr9iuTJAslWCoFZxWZi
        ApmvgfsuG81UTIq3UfV4z0060SSmo9him+ggKhx1Q8ZiZDaHnXQU1VH21DkKGmdfv4JfdV0NxdWXBwxJ
        ofR3wVYMGZr9s8uGcIWMAFsAgHDnpJAJHCnqqG1w9INJJ0kcwNFvdh9g4SGGZu6gegP3Q7fgBwJNOnmq
        2jiCYImo4gxkee5UueCKzOonMcBOefJFZIsziywMNggjQGhgVjLlC4WXPfiZVccmCZkupNKGK8Z9UXAO
        JHIZIqSYHFrsQaihcuXSysArURq5cpyOiIQK7c1C5SZRDtw/d4exRrD938v/AFauXLml8mHyRaLP0XLl
        SHQrNK7JC8/Ueq5ctD5MEuhe00VyuXKxJlVC5ciSZBVXb81y5FCMgqCuXIk2XZpviqLlyC7N4IOnX7FS
        1cuTAJCkrlyz7GJUDPwP2XLlKZkS1cFy5AZA7P6ndR7KLDXoPuuXKa7Cwrc1R31D+Lvdq5cqLsUmz16n
        7Ii5cmQWf//Z
</value>
  </data>
</root>